{"ast":null,"code":"var _jsxFileName = \"/Users/swoleengineer/projects/learn-next/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../components/MyLayout';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\n\nconst PostLink = props => __jsx(\"li\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 3\n  }\n}, __jsx(Link, {\n  href: `/p/[id]`,\n  as: `/p/${props.id}`,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }\n}, __jsx(\"a\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 7\n  }\n}, props.title)));\n\nconst Index = props => {\n  const {\n    shows = []\n  } = props;\n\n  if (!shows.length) {\n    return __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 12\n      }\n    }, \" Hello still waiting \");\n  }\n\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, \"Batman TV Shows\"), __jsx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, shows.map(show => {\n    const {\n      name,\n      id: showId\n    } = show;\n    return __jsx(PostLink, {\n      key: showId,\n      id: showId,\n      title: name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }\n    });\n  })));\n};\n\nIndex.getInitialProps = async function () {\n  const res = await fetch('https://api.tvmaze.com/search/shows?q=batman');\n  const data = await res.json();\n  console.log(`Show data fetched. Count: ${data.length}`);\n  return {\n    shows: data.map(entry => entry.show)\n  };\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/swoleengineer/projects/learn-next/pages/index.js"],"names":["Layout","Link","fetch","PostLink","props","id","title","Index","shows","length","map","show","name","showId","getInitialProps","res","data","json","console","log","entry"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,wBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,MAAMC,QAAQ,GAAGC,KAAK,IACpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,MAAC,IAAD;AAAM,EAAA,IAAI,EAAG,SAAb;AAAuB,EAAA,EAAE,EAAG,MAAKA,KAAK,CAACC,EAAG,EAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAID,KAAK,CAACE,KAAV,CADF,CADF,CADF;;AAQA,MAAMC,KAAK,GAAGH,KAAK,IAAK;AACtB,QAAM;AAAEI,IAAAA,KAAK,GAAG;AAAV,MAAiBJ,KAAvB;;AACA,MAAI,CAACI,KAAK,CAACC,MAAX,EAAmB;AACjB,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAP;AACD;;AAED,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,KAAK,CAACE,GAAN,CAAUC,IAAI,IAAI;AACjB,UAAM;AAAEC,MAAAA,IAAF;AAAQP,MAAAA,EAAE,EAAEQ;AAAZ,QAAuBF,IAA7B;AACA,WACE,MAAC,QAAD;AACE,MAAA,GAAG,EAAEE,MADP;AAEE,MAAA,EAAE,EAAEA,MAFN;AAGE,MAAA,KAAK,EAAED,IAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAOD,GATA,CADH,CAFF,CADF;AAiBD,CAvBD;;AAyBAL,KAAK,CAACO,eAAN,GAAwB,kBAAiB;AACvC,QAAMC,GAAG,GAAG,MAAMb,KAAK,CAAC,8CAAD,CAAvB;AACA,QAAMc,IAAI,GAAG,MAAMD,GAAG,CAACE,IAAJ,EAAnB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAa,6BAA4BH,IAAI,CAACP,MAAO,EAArD;AACA,SAAO;AACLD,IAAAA,KAAK,EAAEQ,IAAI,CAACN,GAAL,CAASU,KAAK,IAAIA,KAAK,CAACT,IAAxB;AADF,GAAP;AAGD,CAPD;;AASA,eAAeJ,KAAf","sourcesContent":["import Layout from '../components/MyLayout';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\n\nconst PostLink = props => (\n  <li>\n    <Link href={`/p/[id]`} as={`/p/${props.id}`}>\n      <a>{props.title}</a>\n    </Link>\n  </li>\n);\n\nconst Index = props =>  {\n  const { shows = [] } = props;\n  if (!shows.length) {\n    return <span> Hello still waiting </span>\n  }\n\n  return (\n    <Layout>\n      <h1>Batman TV Shows</h1>\n      <ul>\n        {shows.map(show => {\n          const { name, id: showId } = show;\n          return (\n            <PostLink\n              key={showId}\n              id={showId}\n              title={name}\n            />\n          );\n        })}\n      </ul>\n    </Layout>\n  );\n}\n\nIndex.getInitialProps = async function() {\n  const res = await fetch('https://api.tvmaze.com/search/shows?q=batman');\n  const data = await res.json();\n  console.log(`Show data fetched. Count: ${data.length}`);\n  return {\n    shows: data.map(entry => entry.show)\n  };\n}\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}